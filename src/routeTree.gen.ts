/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AccountNoAuthImport } from './routes/account/_noAuth'
import { Route as AuthWithdrawalImport } from './routes/_auth/withdrawal'
import { Route as AuthWalletImport } from './routes/_auth/wallet'
import { Route as AuthTransactionImport } from './routes/_auth/transaction'
import { Route as AuthSupportImport } from './routes/_auth/support'
import { Route as AuthSettingImport } from './routes/_auth/setting'
import { Route as AuthRevenueImport } from './routes/_auth/revenue'
import { Route as AuthNotificationImport } from './routes/_auth/notification'
import { Route as AuthEventsImport } from './routes/_auth/events'
import { Route as AuthEscrowImport } from './routes/_auth/escrow'
import { Route as AuthAuditImport } from './routes/_auth/audit'
import { Route as AuthAdministratorImport } from './routes/_auth/administrator'
import { Route as AuthUsersIndexImport } from './routes/_auth/users/index'
import { Route as AuthEventsIndexImport } from './routes/_auth/events/index'
import { Route as AccountNoAuthResetPasswordImport } from './routes/account/_noAuth.reset-password'
import { Route as AccountNoAuthLoginImport } from './routes/account/_noAuth.login'
import { Route as AuthEventsCreateImport } from './routes/_auth/events/create'
import { Route as AuthEventsEventIdImport } from './routes/_auth/events/$eventId'
import { Route as AuthUsersUserIdIndexImport } from './routes/_auth/users/$userId.index'
import { Route as AuthUsersUserIdEditImport } from './routes/_auth/users/$userId.edit'

// Create Virtual Routes

const AccountImport = createFileRoute('/account')()

// Create/Update Routes

const AccountRoute = AccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AccountNoAuthRoute = AccountNoAuthImport.update({
  id: '/_noAuth',
  getParentRoute: () => AccountRoute,
} as any)

const AuthWithdrawalRoute = AuthWithdrawalImport.update({
  id: '/withdrawal',
  path: '/withdrawal',
  getParentRoute: () => AuthRoute,
} as any)

const AuthWalletRoute = AuthWalletImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTransactionRoute = AuthTransactionImport.update({
  id: '/transaction',
  path: '/transaction',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSupportRoute = AuthSupportImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSettingRoute = AuthSettingImport.update({
  id: '/setting',
  path: '/setting',
  getParentRoute: () => AuthRoute,
} as any)

const AuthRevenueRoute = AuthRevenueImport.update({
  id: '/revenue',
  path: '/revenue',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNotificationRoute = AuthNotificationImport.update({
  id: '/notification',
  path: '/notification',
  getParentRoute: () => AuthRoute,
} as any)

const AuthEventsRoute = AuthEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => AuthRoute,
} as any)

const AuthEscrowRoute = AuthEscrowImport.update({
  id: '/escrow',
  path: '/escrow',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuditRoute = AuthAuditImport.update({
  id: '/audit',
  path: '/audit',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdministratorRoute = AuthAdministratorImport.update({
  id: '/administrator',
  path: '/administrator',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthEventsIndexRoute = AuthEventsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthEventsRoute,
} as any)

const AccountNoAuthResetPasswordRoute = AccountNoAuthResetPasswordImport.update(
  {
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => AccountNoAuthRoute,
  } as any,
)

const AccountNoAuthLoginRoute = AccountNoAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AccountNoAuthRoute,
} as any)

const AuthEventsCreateRoute = AuthEventsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AuthEventsRoute,
} as any)

const AuthEventsEventIdRoute = AuthEventsEventIdImport.update({
  id: '/$eventId',
  path: '/$eventId',
  getParentRoute: () => AuthEventsRoute,
} as any)

const AuthUsersUserIdIndexRoute = AuthUsersUserIdIndexImport.update({
  id: '/users/$userId/',
  path: '/users/$userId/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersUserIdEditRoute = AuthUsersUserIdEditImport.update({
  id: '/users/$userId/edit',
  path: '/users/$userId/edit',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/administrator': {
      id: '/_auth/administrator'
      path: '/administrator'
      fullPath: '/administrator'
      preLoaderRoute: typeof AuthAdministratorImport
      parentRoute: typeof AuthImport
    }
    '/_auth/audit': {
      id: '/_auth/audit'
      path: '/audit'
      fullPath: '/audit'
      preLoaderRoute: typeof AuthAuditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/escrow': {
      id: '/_auth/escrow'
      path: '/escrow'
      fullPath: '/escrow'
      preLoaderRoute: typeof AuthEscrowImport
      parentRoute: typeof AuthImport
    }
    '/_auth/events': {
      id: '/_auth/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof AuthEventsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/notification': {
      id: '/_auth/notification'
      path: '/notification'
      fullPath: '/notification'
      preLoaderRoute: typeof AuthNotificationImport
      parentRoute: typeof AuthImport
    }
    '/_auth/revenue': {
      id: '/_auth/revenue'
      path: '/revenue'
      fullPath: '/revenue'
      preLoaderRoute: typeof AuthRevenueImport
      parentRoute: typeof AuthImport
    }
    '/_auth/setting': {
      id: '/_auth/setting'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof AuthSettingImport
      parentRoute: typeof AuthImport
    }
    '/_auth/support': {
      id: '/_auth/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof AuthSupportImport
      parentRoute: typeof AuthImport
    }
    '/_auth/transaction': {
      id: '/_auth/transaction'
      path: '/transaction'
      fullPath: '/transaction'
      preLoaderRoute: typeof AuthTransactionImport
      parentRoute: typeof AuthImport
    }
    '/_auth/wallet': {
      id: '/_auth/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof AuthWalletImport
      parentRoute: typeof AuthImport
    }
    '/_auth/withdrawal': {
      id: '/_auth/withdrawal'
      path: '/withdrawal'
      fullPath: '/withdrawal'
      preLoaderRoute: typeof AuthWithdrawalImport
      parentRoute: typeof AuthImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/account/_noAuth': {
      id: '/account/_noAuth'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountNoAuthImport
      parentRoute: typeof AccountRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/events/$eventId': {
      id: '/_auth/events/$eventId'
      path: '/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof AuthEventsEventIdImport
      parentRoute: typeof AuthEventsImport
    }
    '/_auth/events/create': {
      id: '/_auth/events/create'
      path: '/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof AuthEventsCreateImport
      parentRoute: typeof AuthEventsImport
    }
    '/account/_noAuth/login': {
      id: '/account/_noAuth/login'
      path: '/login'
      fullPath: '/account/login'
      preLoaderRoute: typeof AccountNoAuthLoginImport
      parentRoute: typeof AccountNoAuthImport
    }
    '/account/_noAuth/reset-password': {
      id: '/account/_noAuth/reset-password'
      path: '/reset-password'
      fullPath: '/account/reset-password'
      preLoaderRoute: typeof AccountNoAuthResetPasswordImport
      parentRoute: typeof AccountNoAuthImport
    }
    '/_auth/events/': {
      id: '/_auth/events/'
      path: '/'
      fullPath: '/events/'
      preLoaderRoute: typeof AuthEventsIndexImport
      parentRoute: typeof AuthEventsImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/$userId/edit': {
      id: '/_auth/users/$userId/edit'
      path: '/users/$userId/edit'
      fullPath: '/users/$userId/edit'
      preLoaderRoute: typeof AuthUsersUserIdEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/$userId/': {
      id: '/_auth/users/$userId/'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthUsersUserIdIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthEventsRouteChildren {
  AuthEventsEventIdRoute: typeof AuthEventsEventIdRoute
  AuthEventsCreateRoute: typeof AuthEventsCreateRoute
  AuthEventsIndexRoute: typeof AuthEventsIndexRoute
}

const AuthEventsRouteChildren: AuthEventsRouteChildren = {
  AuthEventsEventIdRoute: AuthEventsEventIdRoute,
  AuthEventsCreateRoute: AuthEventsCreateRoute,
  AuthEventsIndexRoute: AuthEventsIndexRoute,
}

const AuthEventsRouteWithChildren = AuthEventsRoute._addFileChildren(
  AuthEventsRouteChildren,
)

interface AuthRouteChildren {
  AuthAdministratorRoute: typeof AuthAdministratorRoute
  AuthAuditRoute: typeof AuthAuditRoute
  AuthEscrowRoute: typeof AuthEscrowRoute
  AuthEventsRoute: typeof AuthEventsRouteWithChildren
  AuthNotificationRoute: typeof AuthNotificationRoute
  AuthRevenueRoute: typeof AuthRevenueRoute
  AuthSettingRoute: typeof AuthSettingRoute
  AuthSupportRoute: typeof AuthSupportRoute
  AuthTransactionRoute: typeof AuthTransactionRoute
  AuthWalletRoute: typeof AuthWalletRoute
  AuthWithdrawalRoute: typeof AuthWithdrawalRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthUsersIndexRoute: typeof AuthUsersIndexRoute
  AuthUsersUserIdEditRoute: typeof AuthUsersUserIdEditRoute
  AuthUsersUserIdIndexRoute: typeof AuthUsersUserIdIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAdministratorRoute: AuthAdministratorRoute,
  AuthAuditRoute: AuthAuditRoute,
  AuthEscrowRoute: AuthEscrowRoute,
  AuthEventsRoute: AuthEventsRouteWithChildren,
  AuthNotificationRoute: AuthNotificationRoute,
  AuthRevenueRoute: AuthRevenueRoute,
  AuthSettingRoute: AuthSettingRoute,
  AuthSupportRoute: AuthSupportRoute,
  AuthTransactionRoute: AuthTransactionRoute,
  AuthWalletRoute: AuthWalletRoute,
  AuthWithdrawalRoute: AuthWithdrawalRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthUsersIndexRoute: AuthUsersIndexRoute,
  AuthUsersUserIdEditRoute: AuthUsersUserIdEditRoute,
  AuthUsersUserIdIndexRoute: AuthUsersUserIdIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AccountNoAuthRouteChildren {
  AccountNoAuthLoginRoute: typeof AccountNoAuthLoginRoute
  AccountNoAuthResetPasswordRoute: typeof AccountNoAuthResetPasswordRoute
}

const AccountNoAuthRouteChildren: AccountNoAuthRouteChildren = {
  AccountNoAuthLoginRoute: AccountNoAuthLoginRoute,
  AccountNoAuthResetPasswordRoute: AccountNoAuthResetPasswordRoute,
}

const AccountNoAuthRouteWithChildren = AccountNoAuthRoute._addFileChildren(
  AccountNoAuthRouteChildren,
)

interface AccountRouteChildren {
  AccountNoAuthRoute: typeof AccountNoAuthRouteWithChildren
}

const AccountRouteChildren: AccountRouteChildren = {
  AccountNoAuthRoute: AccountNoAuthRouteWithChildren,
}

const AccountRouteWithChildren =
  AccountRoute._addFileChildren(AccountRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/administrator': typeof AuthAdministratorRoute
  '/audit': typeof AuthAuditRoute
  '/escrow': typeof AuthEscrowRoute
  '/events': typeof AuthEventsRouteWithChildren
  '/notification': typeof AuthNotificationRoute
  '/revenue': typeof AuthRevenueRoute
  '/setting': typeof AuthSettingRoute
  '/support': typeof AuthSupportRoute
  '/transaction': typeof AuthTransactionRoute
  '/wallet': typeof AuthWalletRoute
  '/withdrawal': typeof AuthWithdrawalRoute
  '/account': typeof AccountNoAuthRouteWithChildren
  '/': typeof AuthIndexRoute
  '/events/$eventId': typeof AuthEventsEventIdRoute
  '/events/create': typeof AuthEventsCreateRoute
  '/account/login': typeof AccountNoAuthLoginRoute
  '/account/reset-password': typeof AccountNoAuthResetPasswordRoute
  '/events/': typeof AuthEventsIndexRoute
  '/users': typeof AuthUsersIndexRoute
  '/users/$userId/edit': typeof AuthUsersUserIdEditRoute
  '/users/$userId': typeof AuthUsersUserIdIndexRoute
}

export interface FileRoutesByTo {
  '/administrator': typeof AuthAdministratorRoute
  '/audit': typeof AuthAuditRoute
  '/escrow': typeof AuthEscrowRoute
  '/notification': typeof AuthNotificationRoute
  '/revenue': typeof AuthRevenueRoute
  '/setting': typeof AuthSettingRoute
  '/support': typeof AuthSupportRoute
  '/transaction': typeof AuthTransactionRoute
  '/wallet': typeof AuthWalletRoute
  '/withdrawal': typeof AuthWithdrawalRoute
  '/account': typeof AccountNoAuthRouteWithChildren
  '/': typeof AuthIndexRoute
  '/events/$eventId': typeof AuthEventsEventIdRoute
  '/events/create': typeof AuthEventsCreateRoute
  '/account/login': typeof AccountNoAuthLoginRoute
  '/account/reset-password': typeof AccountNoAuthResetPasswordRoute
  '/events': typeof AuthEventsIndexRoute
  '/users': typeof AuthUsersIndexRoute
  '/users/$userId/edit': typeof AuthUsersUserIdEditRoute
  '/users/$userId': typeof AuthUsersUserIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/administrator': typeof AuthAdministratorRoute
  '/_auth/audit': typeof AuthAuditRoute
  '/_auth/escrow': typeof AuthEscrowRoute
  '/_auth/events': typeof AuthEventsRouteWithChildren
  '/_auth/notification': typeof AuthNotificationRoute
  '/_auth/revenue': typeof AuthRevenueRoute
  '/_auth/setting': typeof AuthSettingRoute
  '/_auth/support': typeof AuthSupportRoute
  '/_auth/transaction': typeof AuthTransactionRoute
  '/_auth/wallet': typeof AuthWalletRoute
  '/_auth/withdrawal': typeof AuthWithdrawalRoute
  '/account': typeof AccountRouteWithChildren
  '/account/_noAuth': typeof AccountNoAuthRouteWithChildren
  '/_auth/': typeof AuthIndexRoute
  '/_auth/events/$eventId': typeof AuthEventsEventIdRoute
  '/_auth/events/create': typeof AuthEventsCreateRoute
  '/account/_noAuth/login': typeof AccountNoAuthLoginRoute
  '/account/_noAuth/reset-password': typeof AccountNoAuthResetPasswordRoute
  '/_auth/events/': typeof AuthEventsIndexRoute
  '/_auth/users/': typeof AuthUsersIndexRoute
  '/_auth/users/$userId/edit': typeof AuthUsersUserIdEditRoute
  '/_auth/users/$userId/': typeof AuthUsersUserIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/administrator'
    | '/audit'
    | '/escrow'
    | '/events'
    | '/notification'
    | '/revenue'
    | '/setting'
    | '/support'
    | '/transaction'
    | '/wallet'
    | '/withdrawal'
    | '/account'
    | '/'
    | '/events/$eventId'
    | '/events/create'
    | '/account/login'
    | '/account/reset-password'
    | '/events/'
    | '/users'
    | '/users/$userId/edit'
    | '/users/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/administrator'
    | '/audit'
    | '/escrow'
    | '/notification'
    | '/revenue'
    | '/setting'
    | '/support'
    | '/transaction'
    | '/wallet'
    | '/withdrawal'
    | '/account'
    | '/'
    | '/events/$eventId'
    | '/events/create'
    | '/account/login'
    | '/account/reset-password'
    | '/events'
    | '/users'
    | '/users/$userId/edit'
    | '/users/$userId'
  id:
    | '__root__'
    | '/_auth'
    | '/_auth/administrator'
    | '/_auth/audit'
    | '/_auth/escrow'
    | '/_auth/events'
    | '/_auth/notification'
    | '/_auth/revenue'
    | '/_auth/setting'
    | '/_auth/support'
    | '/_auth/transaction'
    | '/_auth/wallet'
    | '/_auth/withdrawal'
    | '/account'
    | '/account/_noAuth'
    | '/_auth/'
    | '/_auth/events/$eventId'
    | '/_auth/events/create'
    | '/account/_noAuth/login'
    | '/account/_noAuth/reset-password'
    | '/_auth/events/'
    | '/_auth/users/'
    | '/_auth/users/$userId/edit'
    | '/_auth/users/$userId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AccountRoute: typeof AccountRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AccountRoute: AccountRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/account"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/administrator",
        "/_auth/audit",
        "/_auth/escrow",
        "/_auth/events",
        "/_auth/notification",
        "/_auth/revenue",
        "/_auth/setting",
        "/_auth/support",
        "/_auth/transaction",
        "/_auth/wallet",
        "/_auth/withdrawal",
        "/_auth/",
        "/_auth/users/",
        "/_auth/users/$userId/edit",
        "/_auth/users/$userId/"
      ]
    },
    "/_auth/administrator": {
      "filePath": "_auth/administrator.tsx",
      "parent": "/_auth"
    },
    "/_auth/audit": {
      "filePath": "_auth/audit.tsx",
      "parent": "/_auth"
    },
    "/_auth/escrow": {
      "filePath": "_auth/escrow.tsx",
      "parent": "/_auth"
    },
    "/_auth/events": {
      "filePath": "_auth/events.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/events/$eventId",
        "/_auth/events/create",
        "/_auth/events/"
      ]
    },
    "/_auth/notification": {
      "filePath": "_auth/notification.tsx",
      "parent": "/_auth"
    },
    "/_auth/revenue": {
      "filePath": "_auth/revenue.tsx",
      "parent": "/_auth"
    },
    "/_auth/setting": {
      "filePath": "_auth/setting.tsx",
      "parent": "/_auth"
    },
    "/_auth/support": {
      "filePath": "_auth/support.tsx",
      "parent": "/_auth"
    },
    "/_auth/transaction": {
      "filePath": "_auth/transaction.tsx",
      "parent": "/_auth"
    },
    "/_auth/wallet": {
      "filePath": "_auth/wallet.tsx",
      "parent": "/_auth"
    },
    "/_auth/withdrawal": {
      "filePath": "_auth/withdrawal.tsx",
      "parent": "/_auth"
    },
    "/account": {
      "filePath": "account",
      "children": [
        "/account/_noAuth"
      ]
    },
    "/account/_noAuth": {
      "filePath": "account/_noAuth.tsx",
      "parent": "/account",
      "children": [
        "/account/_noAuth/login",
        "/account/_noAuth/reset-password"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/events/$eventId": {
      "filePath": "_auth/events/$eventId.tsx",
      "parent": "/_auth/events"
    },
    "/_auth/events/create": {
      "filePath": "_auth/events/create.tsx",
      "parent": "/_auth/events"
    },
    "/account/_noAuth/login": {
      "filePath": "account/_noAuth.login.tsx",
      "parent": "/account/_noAuth"
    },
    "/account/_noAuth/reset-password": {
      "filePath": "account/_noAuth.reset-password.tsx",
      "parent": "/account/_noAuth"
    },
    "/_auth/events/": {
      "filePath": "_auth/events/index.tsx",
      "parent": "/_auth/events"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/$userId/edit": {
      "filePath": "_auth/users/$userId.edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/$userId/": {
      "filePath": "_auth/users/$userId.index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
